version: '3'
services:
  db:
    image: mongo:4.4.2
    restart: unless-stopped
    volumes:
      - data:/data/db
    networks:
      - mandevices
  api:
    image: $SERVER_IMAGE
    build:
      context: ./packages/server
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - '$SERVER_PORT:$SERVER_PORT'
    environment:
      DB_URI: mongodb://db/$DB_NAME
      PORT: $SERVER_PORT
      GOOGLE_CLIENT_ID: $GOOGLE_CLIENT_ID
      GOOGLE_CLIENT_ID_FRONTEND: $REACT_APP_GOOGLE_CLIENT_ID
      WAIT_HOSTS: db:27017
    networks:
      - mandevices
  cms:
    image: $CMS_IMAGE
    build:
      context: ../cms
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - '$CMS_PORT:$CMS_PORT'
    volumes:
      - ./cms-uploads:/usr/src/app/public/uploads
    environment:
      DATABASE_HOST: db
      PORT: $CMS_PORT
      PUBLIC_URL: $CMS_URL
    networks:
      - mandevices
  web_app:
    image: $WEB_APP_IMAGE
    build:
      context: ./packages/webApp
      dockerfile: Dockerfile
      args:
        REACT_APP_GOOGLE_CLIENT_ID: $REACT_APP_GOOGLE_CLIENT_ID
    depends_on:
      - api
    restart: unless-stopped
    ports:
      - '$WEB_APP_PORT:80'
    networks:
      - mandevices
  websites:
    image: $WEBSITES_IMAGE
    build:
      context: ./packages/websites
      dockerfile: Dockerfile
    depends_on:
      - api
    restart: unless-stopped
    ports:
      - '$WEBSITES_PORT:80'
    networks:
      - mandevices
volumes:
  data:
networks:
  mandevices:
    driver: bridge
